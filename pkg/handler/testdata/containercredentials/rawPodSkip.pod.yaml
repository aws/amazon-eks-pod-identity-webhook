apiVersion: v1
kind: Pod
metadata:
  name: balajilovesoreos
  annotations:
    testing.eks.amazonaws.com/skip: "false"
    testing.eks.amazonaws.com/containercredentials/uri: "con-creds-uri"
    testing.eks.amazonaws.com/containercredentials/audience: "con-creds-aud"
    testing.eks.amazonaws.com/containercredentials/mountPath: "/con-creds-mount-path"
    testing.eks.amazonaws.com/containercredentials/volumeName: "con-creds-volume-name"
    testing.eks.amazonaws.com/containercredentials/tokenPath: "con-creds-token-path"
    testing.eks.amazonaws.com/expectedPatch: '[{"op":"add","path":"/spec/volumes","value":[{"name":"con-creds-volume-name","projected":{"sources":[{"serviceAccountToken":{"audience":"con-creds-aud","expirationSeconds":86400,"path":"con-creds-token-path"}}]}}]},{"op":"add","path":"/spec/containers","value":[{"name":"sidecar","image":"amazonlinux","resources":{}},{"name":"balajilovesoreos","image":"amazonlinux","env":[{"name":"AWS_CONTAINER_CREDENTIALS_FULL_URI","value":"con-creds-uri"},{"name":"AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE","value":"/con-creds-mount-path/con-creds-token-path"}],"resources":{},"volumeMounts":[{"name":"con-creds-volume-name","readOnly":true,"mountPath":"/con-creds-mount-path"}]}]}]'
    # Pod Annotation
    eks.amazonaws.com/skip-containers: "sidecar"
spec:
  containers:
    - image: amazonlinux
      name: sidecar
    - image: amazonlinux
      name: balajilovesoreos
  serviceAccountName: default
